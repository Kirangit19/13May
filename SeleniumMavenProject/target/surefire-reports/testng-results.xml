<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="5" total="64" passed="57">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="191156" started-at="2022-09-24T05:13:14Z" finished-at="2022-09-24T05:16:25Z">
    <groups>
      <group name="Maths">
        <method signature="GroupExample.Division()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Division" class="dataProvider.GroupExample"/>
        <method signature="GroupExample.Percentage()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Percentage" class="dataProvider.GroupExample"/>
        <method signature="GroupExample.Substraction()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Substraction" class="dataProvider.GroupExample"/>
      </group> <!-- Maths -->
      <group name="Calculation">
        <method signature="GroupExample.Addition()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Addition" class="dataProvider.GroupExample"/>
        <method signature="GroupExample.Modulus()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Modulus" class="dataProvider.GroupExample"/>
        <method signature="GroupExample.Multiplication()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Multiplication" class="dataProvider.GroupExample"/>
      </group> <!-- Calculation -->
    </groups>
    <test name="Test" duration-ms="191156" started-at="2022-09-24T05:13:14Z" finished-at="2022-09-24T05:16:25Z">
      <class name="excelReading.ExcelReading">
        <test-method status="PASS" signature="getCellData()[pri:0, instance:excelReading.ExcelReading@5a955565]" name="getCellData" duration-ms="978" started-at="2022-09-24T10:44:50Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCellData -->
        <test-method status="PASS" signature="getCellDetails()[pri:0, instance:excelReading.ExcelReading@5a955565]" name="getCellDetails" duration-ms="87" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCellDetails -->
        <test-method status="PASS" signature="getRowDetails()[pri:0, instance:excelReading.ExcelReading@5a955565]" name="getRowDetails" duration-ms="57" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRowDetails -->
        <test-method status="PASS" signature="readSheetDetails()[pri:0, instance:excelReading.ExcelReading@5a955565]" name="readSheetDetails" duration-ms="45" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readSheetDetails -->
      </class> <!-- excelReading.ExcelReading -->
      <class name="actitimeTestNG.Actitime_enabled">
        <test-method status="PASS" signature="createTask()[pri:0, instance:actitimeTestNG.Actitime_enabled@1df82230]" name="createTask" duration-ms="0" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTask -->
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_enabled@1df82230]" name="openBrowserAndAppURL" duration-ms="194" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
      </class> <!-- actitimeTestNG.Actitime_enabled -->
      <class name="anotation.AnoalwaysRun">
        <test-method status="FAIL" signature="test2()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d]" name="test2" duration-ms="0" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Method fail]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Method fail
	at org.testng.Assert.fail(Assert.java:94)
	at anotation.AnoalwaysRun.test2(AnoalwaysRun.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d]" name="test1" duration-ms="0" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at anotation.AnoalwaysRun.test1(AnoalwaysRun.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test4()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d]" name="test4" duration-ms="0" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="SKIP" signature="test3()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d]" name="test3" duration-ms="0" started-at="2022-09-24T10:46:25Z" depends-on-methods="anotation.AnoalwaysRun.test1" finished-at="2022-09-24T10:46:25Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AnoalwaysRun.test3()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AnoalwaysRun.test3()[pri:0, instance:anotation.AnoalwaysRun@7fc2413d] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- anotation.AnoalwaysRun -->
      <class name="dropDown.DynamicDropDown">
        <test-method status="PASS" signature="start()[pri:0, instance:dropDown.DynamicDropDown@2a32de6c]" name="start" duration-ms="32101" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="makemytrip()[pri:0, instance:dropDown.DynamicDropDown@2a32de6c]" name="makemytrip" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makemytrip -->
      </class> <!-- dropDown.DynamicDropDown -->
      <class name="report.TestReport">
        <test-method status="PASS" signature="StartTest()[pri:0, instance:report.TestReport@4c15e7fd]" name="StartTest" is-config="true" duration-ms="435" started-at="2022-09-24T10:45:23Z" finished-at="2022-09-24T10:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartTest -->
        <test-method status="PASS" signature="ReportTest1()[pri:0, instance:report.TestReport@4c15e7fd]" name="ReportTest1" duration-ms="26454" started-at="2022-09-24T10:45:23Z" finished-at="2022-09-24T10:45:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportTest1 -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:report.TestReport@4c15e7fd]" name="endTest" is-config="true" duration-ms="3138" started-at="2022-09-24T10:45:50Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- report.TestReport -->
      <class name="actitimeTestNG.Actitime_Dependson">
        <test-method status="PASS" signature="createTask()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d]" name="createTask" duration-ms="1" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTask -->
        <test-method status="PASS" signature="logoutClose()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d]" name="logoutClose" duration-ms="1" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutClose -->
        <test-method status="FAIL" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at actitimeTestNG.Actitime_Dependson.openBrowserAndAppURL(Actitime_Dependson.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="SKIP" signature="login()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d]" name="login" duration-ms="1" started-at="2022-09-24T10:46:25Z" depends-on-methods="actitimeTestNG.Actitime_Dependson.openBrowserAndAppURL" finished-at="2022-09-24T10:46:25Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Actitime_Dependson.login()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Actitime_Dependson.login()[pri:0, instance:actitimeTestNG.Actitime_Dependson@23f7d05d] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- actitimeTestNG.Actitime_Dependson -->
      <class name="dataProvider.IncludeExclude">
        <test-method status="PASS" signature="addDepartmentTestCase()[pri:0, instance:dataProvider.IncludeExclude@f8c1ddd]" name="addDepartmentTestCase" duration-ms="14" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addDepartmentTestCase -->
        <test-method status="PASS" signature="addEmployeeTestCase()[pri:0, instance:dataProvider.IncludeExclude@f8c1ddd]" name="addEmployeeTestCase" duration-ms="1" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEmployeeTestCase -->
        <test-method status="PASS" signature="addLocationTestCase()[pri:0, instance:dataProvider.IncludeExclude@f8c1ddd]" name="addLocationTestCase" duration-ms="1" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addLocationTestCase -->
      </class> <!-- dataProvider.IncludeExclude -->
      <class name="anotation.AnoDependencies">
        <test-method status="PASS" signature="test1()[pri:0, instance:anotation.AnoDependencies@1e730495]" name="test1" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:anotation.AnoDependencies@1e730495]" name="test2" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:anotation.AnoDependencies@1e730495]" name="test3" duration-ms="0" started-at="2022-09-24T10:46:25Z" depends-on-methods="anotation.AnoDependencies.test1" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- anotation.AnoDependencies -->
      <class name="anotation.simpleTest">
        <test-method status="PASS" signature="beforesuite()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="beforesuite" is-config="true" duration-ms="19" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method status="PASS" signature="beforetest()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="beforetest" is-config="true" duration-ms="0" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method status="PASS" signature="test2()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="test2" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="beforemethod" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="beforeclass" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="test1()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="test1" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="aftermethod" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="afterclass" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="beforemethod" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="aftermethod" is-config="true" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="afterTest" is-config="true" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:anotation.simpleTest@79ad8b2f]" name="afterSuite" is-config="true" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- anotation.simpleTest -->
      <class name="actitimeTestNG.Actitime_Timeout">
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_Timeout@23986957]" name="openBrowserAndAppURL" duration-ms="194" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
      </class> <!-- actitimeTestNG.Actitime_Timeout -->
      <class name="excelReading.UpdateExcel">
        <test-method status="FAIL" signature="updateExcel()[pri:0, instance:excelReading.UpdateExcel@6293abcc]" name="updateExcel" duration-ms="48" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at excelReading.UpdateExcel.updateExcel(UpdateExcel.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateExcel -->
      </class> <!-- excelReading.UpdateExcel -->
      <class name="dataProvider.GroupExample">
        <test-method status="PASS" signature="Division()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Division" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Division -->
        <test-method status="PASS" signature="Modulus()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Modulus" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Modulus -->
        <test-method status="PASS" signature="Addition()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Addition" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Addition -->
        <test-method status="PASS" signature="Substraction()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Substraction" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Substraction -->
        <test-method status="PASS" signature="Multiplication()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Multiplication" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Multiplication -->
        <test-method status="PASS" signature="Percentage()[pri:0, instance:dataProvider.GroupExample@7d3a22a9]" name="Percentage" duration-ms="0" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Percentage -->
      </class> <!-- dataProvider.GroupExample -->
      <class name="actitimeTestNG.Actitime_Priority">
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:1, instance:actitimeTestNG.Actitime_Priority@6b19b79]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:46:25Z" description="Open browser and enter URL" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="PASS" signature="login()[pri:2, instance:actitimeTestNG.Actitime_Priority@6b19b79]" name="login" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="createTask()[pri:3, instance:actitimeTestNG.Actitime_Priority@6b19b79]" name="createTask" duration-ms="1" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTask -->
        <test-method status="PASS" signature="logoutClose()[pri:4, instance:actitimeTestNG.Actitime_Priority@6b19b79]" name="logoutClose" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutClose -->
      </class> <!-- actitimeTestNG.Actitime_Priority -->
      <class name="sample.Sample1">
        <test-method status="PASS" signature="test()[pri:0, instance:sample.Sample1@7692d9cc]" name="test" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- sample.Sample1 -->
      <class name="sample.Sample2">
        <test-method status="PASS" signature="compose()[pri:0, instance:sample.Sample2@75f32542]" name="compose" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compose -->
        <test-method status="PASS" signature="login()[pri:0, instance:sample.Sample2@75f32542]" name="login" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="signUp()[pri:0, instance:sample.Sample2@75f32542]" name="signUp" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUp -->
      </class> <!-- sample.Sample2 -->
      <class name="actitimeTestNG.Actitime_ExceptionAndTimeout">
        <test-method status="PASS" signature="executetimeOut()[pri:0, instance:actitimeTestNG.Actitime_ExceptionAndTimeout@2133814f]" name="executetimeOut" duration-ms="6" started-at="2022-09-24T10:45:23Z" finished-at="2022-09-24T10:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executetimeOut -->
        <test-method status="PASS" signature="dividedByZeroExample1()[pri:0, instance:actitimeTestNG.Actitime_ExceptionAndTimeout@2133814f]" name="dividedByZeroExample1" duration-ms="0" started-at="2022-09-24T10:45:23Z" finished-at="2022-09-24T10:45:23Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at actitimeTestNG.Actitime_ExceptionAndTimeout.dividedByZeroExample1(Actitime_ExceptionAndTimeout.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividedByZeroExample1 -->
      </class> <!-- actitimeTestNG.Actitime_ExceptionAndTimeout -->
      <class name="actitimeTestNG.Actitime_InvocationCount">
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_InvocationCount@7f1302d6]" name="openBrowserAndAppURL" duration-ms="2" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_InvocationCount@7f1302d6]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_InvocationCount@7f1302d6]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_InvocationCount@7f1302d6]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
        <test-method status="PASS" signature="openBrowserAndAppURL()[pri:0, instance:actitimeTestNG.Actitime_InvocationCount@7f1302d6]" name="openBrowserAndAppURL" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowserAndAppURL -->
      </class> <!-- actitimeTestNG.Actitime_InvocationCount -->
      <class name="sample.Sample3">
        <test-method status="PASS" signature="b_login()[pri:0, instance:sample.Sample3@43ee72e6]" name="b_login" duration-ms="1" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_login -->
        <test-method status="PASS" signature="a_signUp()[pri:0, instance:sample.Sample3@43ee72e6]" name="a_signUp" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a_signUp -->
        <test-method status="PASS" signature="c_compose()[pri:0, instance:sample.Sample3@43ee72e6]" name="c_compose" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- c_compose -->
      </class> <!-- sample.Sample3 -->
      <class name="sample.NewTest">
        <test-method status="PASS" signature="testCase1()[pri:0, instance:sample.NewTest@70be0a2b]" name="testCase1" duration-ms="31401" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- sample.NewTest -->
      <class name="dataProvider.DataProvider1">
        <test-method status="PASS" signature="test1(java.lang.String, java.lang.String, int)[pri:0, instance:dataProvider.DataProvider1@6a01e23]" name="test1" duration-ms="0" started-at="2022-09-24T10:44:50Z" data-provider="getData" finished-at="2022-09-24T10:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test1(java.lang.String, java.lang.String, int)[pri:0, instance:dataProvider.DataProvider1@6a01e23]" name="test1" duration-ms="0" started-at="2022-09-24T10:44:50Z" data-provider="getData" finished-at="2022-09-24T10:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- dataProvider.DataProvider1 -->
      <class name="dataProvider.Test1">
        <test-method status="PASS" signature="loginVtiger(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataProvider.Test1@13c10b87]" name="loginVtiger" duration-ms="36402" started-at="2022-09-24T10:43:14Z" data-provider="getUserDetails" finished-at="2022-09-24T10:43:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginVtiger -->
        <test-method status="PASS" signature="loginVtiger(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:dataProvider.Test1@13c10b87]" name="loginVtiger" duration-ms="59525" started-at="2022-09-24T10:43:51Z" data-provider="getUserDetails" finished-at="2022-09-24T10:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginVtiger -->
      </class> <!-- dataProvider.Test1 -->
      <class name="retryAnalyzer.MyTest">
        <test-method status="PASS" signature="Test1()[pri:0, instance:retryAnalyzer.MyTest@7995092a]" name="Test1" duration-ms="0" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="Test2()[pri:0, instance:retryAnalyzer.MyTest@7995092a]" name="Test2" duration-ms="0" started-at="2022-09-24T10:44:51Z" finished-at="2022-09-24T10:44:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
      </class> <!-- retryAnalyzer.MyTest -->
      <class name="retryAnalyzer.RuntimeRetry">
        <test-method status="PASS" signature="Test1()[pri:0, instance:retryAnalyzer.RuntimeRetry@1d082e88]" name="Test1" duration-ms="16" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="FAIL" signature="Test2()[pri:0, instance:retryAnalyzer.RuntimeRetry@1d082e88]" name="Test2" duration-ms="1" started-at="2022-09-24T10:45:53Z" finished-at="2022-09-24T10:45:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at retryAnalyzer.RuntimeRetry.Test2(RuntimeRetry.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
      </class> <!-- retryAnalyzer.RuntimeRetry -->
      <class name="anotation.AnoPriority">
        <test-method status="PASS" signature="test1()[pri:1, instance:anotation.AnoPriority@60704c]" name="test1" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test3()[pri:1, instance:anotation.AnoPriority@60704c]" name="test3" duration-ms="0" started-at="2022-09-24T10:46:25Z" finished-at="2022-09-24T10:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- anotation.AnoPriority -->
      <class name="pageObjectModel.TestContactPage">
        <test-method status="PASS" signature="testContactsCreation()[pri:0, instance:pageObjectModel.TestContactPage@22635ba0]" name="testContactsCreation" duration-ms="0" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactsCreation -->
        <test-method status="PASS" signature="testDeletionCreation()[pri:0, instance:pageObjectModel.TestContactPage@22635ba0]" name="testDeletionCreation" duration-ms="0" started-at="2022-09-24T10:43:14Z" finished-at="2022-09-24T10:43:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletionCreation -->
      </class> <!-- pageObjectModel.TestContactPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
